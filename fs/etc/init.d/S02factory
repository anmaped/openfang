#!/bin/sh

case "$1" in 
	start)
		section_names=$(nvram layout | sed -n '/name:/p' | awk -F' ' '{print $3}')
		factory=$(nvram get rtdev factory >&2)
		if [ $? != 0 ]; then
			for sec in $section_names
			do
				echo "Clearing sec: $sec"
				nvram clear $sec
			done
			nvram set rtdev factory 1
			nvram set rtdev fw_version "$(cat /opt/version)"
			nvram set wapi adminpasswd "admin"

			# Create a SSL certificate
			export OPENSSL_CONF=/etc/ssl/openssl.cnf
			openssl req -new -x509 -keyout /etc/ssl/lighttpd.pem -out /etc/ssl/lighttpd.pem -days 365 -nodes -subj "/C=DE/ST=.../L=.../O=.../OU=.../CN=.../emailAddress=..."
			chmod 400 /etc/ssl/lighttpd.pem

			nvram set rtdev certificate "$(cat /etc/ssl/lighttpd.pem)"

			# check if hardware was identified, reboot otherwise
			model_name=$(cat /proc/cmdline | grep -o 'hwversion=[^@]*' | cut -c 11- -)
			echo "Model Found: $model_name"
			{ [ "$model_name" = "" ] && [ ! -f /opt/model ]; } && { modprobe sinfo; echo 1 >/proc/jz/sinfo/info; sleep 10; echo "unknown" > /opt/model; reboot; }
			# hardware was identified; commit the model changes
			setmodel "$model_name"
			[ $? ] && { echo "Settings have been applied acording to the model."; reboot; }
		else
			# check if reset button is pressed
			number=$(nvram get 2860 reset_pin)
			echo $number > /sys/class/gpio/export
			echo in > /sys/class/gpio/gpio$number/direction
			[ "$(cat /sys/class/gpio/gpio$number/value)" = "0" ] && nvram clear rtdev && nvram commit && reboot

			[ "$(nvram get rtdev fw_version)" != "$(cat /opt/version)" ] && nvram set rtdev fw_version "$(cat /opt/version)"
			
			# restore the SSL certifcate
			nvram get rtdev certificate > "/etc/ssl/lighttpd.pem"
			chmod 400 /etc/ssl/lighttpd.pem
		fi
		;;
	stop)
		echo "do nothing"
		;;
	restart|reload)
		"$0" stop
		"$0" start
		;;
	*)
		echo "Usage: $0 {start|stop|restart}"
		exit 1
esac

exit $?
